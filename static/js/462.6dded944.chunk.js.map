{"version":3,"file":"static/js/462.6dded944.chunk.js","mappings":"0LACA,MAAgC,mCAAhC,EAA+E,+BAA/E,EAA2H,gC,oBCD9GA,EAAiB,SAAAC,GAAK,OAAIA,EAAMC,SAASC,KAAnB,EACtBC,EAAkB,SAAAH,GAAK,OAAIA,EAAMC,SAASG,SAAnB,EACvBC,EAAc,SAAAL,GAAK,OAAIA,EAAMC,SAASK,KAAnB,EACnBC,EAAe,SAAAP,GAAK,OAAIA,EAAMQ,MAAV,E,SCGlB,SAASC,IACtB,IAAMC,GAAWC,EAAAA,EAAAA,MAEXV,GAAWW,EAAAA,EAAAA,IAAYb,GA2B7B,OACE,0BACE,kBAAMc,SA3BW,SAAAC,GACnBA,EAAIC,iBACJ,IAAMC,EAAOF,EAAIG,OAIjB,GAFuBhB,EAASiB,MAAK,SAAAC,GAAO,OAAIA,EAAQC,KAAKC,gBAAkBL,EAAKM,SAASF,KAAKG,MAAMF,aAA5D,IAgB1CG,MAAM,2BAAD,OAA4BR,EAAKM,SAASF,KAAKG,MAA/C,wBAdc,CACnB,IAAMH,EAAOJ,EAAKM,SAASF,KAAKG,MAC1BE,EAAST,EAAKM,SAASG,OAAOF,MAEpC,GAAoB,KAAhBH,EAAKM,QAAmC,KAAlBD,EAAOC,OAE/B,YADAF,MAAM,+CAIRd,GAASiB,EAAAA,EAAAA,IAAW,CAClBP,KAAAA,EACAK,OAAAA,IAEH,CAGDT,EAAKY,OACN,EAIiCC,UAAWC,EAAzC,WACE,kBAAOC,QAAQ,OAAf,mBACA,kBACEF,UAAWC,EACXE,KAAK,OACLZ,KAAK,OACLa,QAAQ,2HACRC,MAAM,8EACNC,UAAQ,KAEV,kBAAOJ,QAAQ,SAAf,qBACA,kBACEF,UAAWC,EACXE,KAAK,MACLZ,KAAK,SACLa,QAAQ,qGACRC,MAAM,oFACNC,UAAQ,KAEV,mBAAQH,KAAK,SAASH,UAAWC,EAAjC,6BAMP,C,cC9DD,GAAiB,ECKF,SAASM,IACtB,IAAM1B,GAAWC,EAAAA,EAAAA,MAEXV,GAAWW,EAAAA,EAAAA,IAAYb,GACvBsC,GAAazB,EAAAA,EAAAA,IAAYL,GAIzB+B,EAAgBrC,EAASO,QAAO,SAAAW,GAAO,OAC3CA,EAAQC,KAAKC,cAAckB,SAASF,EAAWhB,cADJ,IAI7C,OACI,wBACGiB,EAAcE,KAAI,gBAAEpB,EAAF,EAAEA,KAAMqB,EAAR,EAAQA,MAAOC,EAAf,EAAeA,GAAf,OACjB,0BACGtB,EADH,KACWqB,GACT,mBACET,KAAK,SACLH,UAAWC,EAAAA,WACXY,GAAIA,EACJC,QAAS,YAfA,SAACD,GAAShC,GAASkC,EAAAA,EAAAA,IAAcF,GAAM,CAehCG,CAAaH,EAAI,EAJnC,sBAFOA,EADQ,KAc1B,C,cC/Bc,SAASI,IAEtB,IAAMpC,GAAWC,EAAAA,EAAAA,MAKjB,OACE,qDAEE,kBAAOS,KAAK,SAAS2B,YAAY,YAAWC,SAP3B,SAAAlC,GACnBJ,GAASF,EAAAA,EAAAA,GAAOM,EAAImC,cAAc1B,OACnC,MAQF,CCRc,SAAS2B,IACtB,IAAMxC,GAAWC,EAAAA,EAAAA,MAEXP,GAAYQ,EAAAA,EAAAA,IAAYT,GACxBG,GAAQM,EAAAA,EAAAA,IAAYP,GAM1B,OAJA8C,EAAAA,EAAAA,YAAU,WACRzC,GAAS0C,EAAAA,EAAAA,MACV,GAAE,CAAC1C,KAGF,2BACGN,IAAcE,IAAS,mDACxB,uCACA,SAACG,EAAD,KACA,sCACA,SAACqC,EAAD,KACA,SAACV,EAAD,MAGL,C","sources":["webpack://goit-react-hw-08-phonebook/./src/components/ContactForm/ContactForm.module.css?b5b2","redux/contacts/selectors.js","components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.module.css","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","pages/Contacts.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"formContainer\":\"ContactForm_formContainer__TWEE2\",\"formInput\":\"ContactForm_formInput__GszVU\",\"formButton\":\"ContactForm_formButton__TN6Jq\"};","export const selectContacts = state => state.contacts.items;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\nexport const selectFilter = state => state.filter;\n","import css from './ContactForm.module.css';\n\nimport { useDispatch, useSelector} from \"react-redux\";\nimport { addContact } from '../../redux/contacts/operations';\nimport { selectContacts } from '../../redux/contacts/selectors'\n\nexport default function ContactForm() {\n  const dispatch = useDispatch();\n\n  const contacts = useSelector(selectContacts)\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n    const form = evt.target;\n\n    const includeContact = contacts.find(contact => contact.name.toLowerCase() === form.elements.name.value.toLowerCase());\n\n    if (!includeContact) {\n      const name = form.elements.name.value;\n      const number = form.elements.number.value;\n\n      if (name.trim() === '' || number.trim() === '') {\n        alert(`Please enter the contact's name and number.`)\n        return;\n      }\n\n      dispatch(addContact({\n        name,\n        number\n      }));\n    } else {\n      alert(`A contact with the name ${form.elements.name.value} already exists`);\n    }\n    form.reset();\n  };\n\n  return (\n    <div>\n      <form onSubmit={handleSubmit} className={css.formContainer}>\n        <label htmlFor=\"name\">Name</label>\n        <input\n          className={css.formInput}\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' \\-][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, spaces, hyphens, and apostrophes are allowed\"\n          required\n        />\n        <label htmlFor=\"number\">Number</label>\n        <input\n          className={css.formInput}\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[ .\\-\\s]?\\(?\\d{1,3}?\\)?[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,9}\"\n          title=\"Valid Phone Number: Optional '+' Symbol, Digits, Spaces, Hyphens, and Parentheses\"\n          required\n        />\n        <button type=\"submit\" className={css.formButton}>\n          Add contact\n        </button>\n      </form>\n    </div>\n  );\n}","// extracted by mini-css-extract-plugin\nexport default {};","import React from 'react';\nimport css from './ContactList.module.css'\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { deleteContact } from '../../redux/contacts/operations'\nimport { selectContacts, selectFilter } from '../../redux/contacts/selectors';\n\nexport default function ContactList() {\n  const dispatch = useDispatch()\n\n  const contacts = useSelector(selectContacts);\n  const filtration = useSelector(selectFilter);\n\n  const handleDelete = (id) => { dispatch(deleteContact(id)) };\n\n  const filterContact = contacts.filter(contact =>\n    contact.name.toLowerCase().includes(filtration.toLowerCase())\n  );\n  \n  return (\n      <ul>\n        {filterContact.map(({name, phone, id}) => (\n          <li key={id}>\n            {name}: {phone}\n            <button\n              type=\"button\"\n              className={css.buttonList}\n              id={id}\n              onClick={() => {handleDelete(id)}}>\n              Delete\n            </button>\n          </li>\n        ))}\n      </ul>\n  )\n}","import { useDispatch} from 'react-redux';\nimport { filter } from '../../redux/contacts/filterSlice';\n\nexport default function Filter() {\n\n  const dispatch = useDispatch();\n  const handleFilter = evt => {\n    dispatch(filter(evt.currentTarget.value));\n  };\n  \n  return (\n    <label>\n      Find contact by name\n      <input name='search' placeholder='Search...'onChange={handleFilter}></input>\n    </label>\n  );\n}","import ContactForm from 'components/ContactForm/ContactForm';\nimport ContactList from 'components/ContactList/ContactList';\nimport Filter from 'components/Filter/Filter';\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { selectError, selectIsLoading } from 'redux/contacts/selectors';\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <div>\n      {isLoading && !error && <b>Request in progress...</b>}\n      <h1>Phonebook</h1>\n      <ContactForm />\n      <h2>Contacts</h2>\n      <Filter />\n      <ContactList />\n    </div>\n  );\n}\n"],"names":["selectContacts","state","contacts","items","selectIsLoading","isLoading","selectError","error","selectFilter","filter","ContactForm","dispatch","useDispatch","useSelector","onSubmit","evt","preventDefault","form","target","find","contact","name","toLowerCase","elements","value","alert","number","trim","addContact","reset","className","css","htmlFor","type","pattern","title","required","ContactList","filtration","filterContact","includes","map","phone","id","onClick","deleteContact","handleDelete","Filter","placeholder","onChange","currentTarget","Contacts","useEffect","fetchContacts"],"sourceRoot":""}